# Дана последовательность чисел. Получить список уникальных элементов заданной последовательности.
# Пример: [1, 2, 3, 5, 1, 5, 3, 10] => [2, 10]

# ourlist = [1, 2, 3, 5, 1, 5, 3, 10]
# unique = filter(lambda x: ourlist.count(x) == 1, ourlist)
# print(*unique)


# Задание
# Формат: На семинаре и в лекциях мы разобрали новые функции, которые позволяют улучшить код прошлых задач.
# Задача: предложить улучшения кода для уже решённых задач(не менее 4 задач нужно улучшить):
# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension


# 1. Напишите программу, которая принимает на вход число N и выдаёт последовательность из N членов (1, -3, 9, -27, 81).
# N = 5
# print(*map(lambda x: (-3)**x, range(N)))


# 2. Задайте список из n чисел последовательности $(1+\frac 1 n)^n$ и выведите на экран их сумму. 
# N = 5
# print(sum(map(lambda x: round((1+1/x)**x,3), range(1,N))))


# 3. Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.
# f = lambda x: 6<=x<=7
# print(f(int(input('номер дня недели: '))))


# 4. Напишите программу, которая принимает на вход число N и выдает набор произведений чисел от 1 до N.
# import math
# N = 5
# print(*map(lambda x: math.factorial(x), range(1, N)))


# 5. Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.
# import random
# q = [random.randint(0, 10) for i in range(5)]
# print(q)
# print(*filter(lambda x: q.index(x)%2, q))
# print(sum(filter(lambda x: q.index(x)%2, q)))

